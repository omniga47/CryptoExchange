//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace DataLayer {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("TrnAltCoinTraderValue")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class TrnAltCoinTraderValue : global::System.Data.DataSet {
        
        private TrnAltCoinTraderValueDataTable tableTrnAltCoinTraderValue;
        
        private AltCoinTraderDisplayDataTable tableAltCoinTraderDisplay;
        
        private AltCoinTraderSecurityDataTable tableAltCoinTraderSecurity;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TrnAltCoinTraderValue() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected TrnAltCoinTraderValue(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["TrnAltCoinTraderValue"] != null)) {
                    base.Tables.Add(new TrnAltCoinTraderValueDataTable(ds.Tables["TrnAltCoinTraderValue"]));
                }
                if ((ds.Tables["AltCoinTraderDisplay"] != null)) {
                    base.Tables.Add(new AltCoinTraderDisplayDataTable(ds.Tables["AltCoinTraderDisplay"]));
                }
                if ((ds.Tables["AltCoinTraderSecurity"] != null)) {
                    base.Tables.Add(new AltCoinTraderSecurityDataTable(ds.Tables["AltCoinTraderSecurity"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TrnAltCoinTraderValueDataTable _TrnAltCoinTraderValue {
            get {
                return this.tableTrnAltCoinTraderValue;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AltCoinTraderDisplayDataTable AltCoinTraderDisplay {
            get {
                return this.tableAltCoinTraderDisplay;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AltCoinTraderSecurityDataTable AltCoinTraderSecurity {
            get {
                return this.tableAltCoinTraderSecurity;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            TrnAltCoinTraderValue cln = ((TrnAltCoinTraderValue)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["TrnAltCoinTraderValue"] != null)) {
                    base.Tables.Add(new TrnAltCoinTraderValueDataTable(ds.Tables["TrnAltCoinTraderValue"]));
                }
                if ((ds.Tables["AltCoinTraderDisplay"] != null)) {
                    base.Tables.Add(new AltCoinTraderDisplayDataTable(ds.Tables["AltCoinTraderDisplay"]));
                }
                if ((ds.Tables["AltCoinTraderSecurity"] != null)) {
                    base.Tables.Add(new AltCoinTraderSecurityDataTable(ds.Tables["AltCoinTraderSecurity"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableTrnAltCoinTraderValue = ((TrnAltCoinTraderValueDataTable)(base.Tables["TrnAltCoinTraderValue"]));
            if ((initTable == true)) {
                if ((this.tableTrnAltCoinTraderValue != null)) {
                    this.tableTrnAltCoinTraderValue.InitVars();
                }
            }
            this.tableAltCoinTraderDisplay = ((AltCoinTraderDisplayDataTable)(base.Tables["AltCoinTraderDisplay"]));
            if ((initTable == true)) {
                if ((this.tableAltCoinTraderDisplay != null)) {
                    this.tableAltCoinTraderDisplay.InitVars();
                }
            }
            this.tableAltCoinTraderSecurity = ((AltCoinTraderSecurityDataTable)(base.Tables["AltCoinTraderSecurity"]));
            if ((initTable == true)) {
                if ((this.tableAltCoinTraderSecurity != null)) {
                    this.tableAltCoinTraderSecurity.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "TrnAltCoinTraderValue";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/TrnAltCoinTraderValue.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTrnAltCoinTraderValue = new TrnAltCoinTraderValueDataTable();
            base.Tables.Add(this.tableTrnAltCoinTraderValue);
            this.tableAltCoinTraderDisplay = new AltCoinTraderDisplayDataTable();
            base.Tables.Add(this.tableAltCoinTraderDisplay);
            this.tableAltCoinTraderSecurity = new AltCoinTraderSecurityDataTable();
            base.Tables.Add(this.tableAltCoinTraderSecurity);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerialize_TrnAltCoinTraderValue() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeAltCoinTraderDisplay() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeAltCoinTraderSecurity() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            TrnAltCoinTraderValue ds = new TrnAltCoinTraderValue();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TrnAltCoinTraderValueRowChangeEventHandler(object sender, TrnAltCoinTraderValueRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void AltCoinTraderDisplayRowChangeEventHandler(object sender, AltCoinTraderDisplayRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void AltCoinTraderSecurityRowChangeEventHandler(object sender, AltCoinTraderSecurityRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TrnAltCoinTraderValueDataTable : global::System.Data.TypedTableBase<TrnAltCoinTraderValueRow> {
            
            private global::System.Data.DataColumn columnTrnAltCoinTraderValueId;
            
            private global::System.Data.DataColumn columnTrnAltCoinTraderValueGuid;
            
            private global::System.Data.DataColumn columnMstCurrencyListGuid;
            
            private global::System.Data.DataColumn columnPriceValue;
            
            private global::System.Data.DataColumn columnCoinValue;
            
            private global::System.Data.DataColumn columnTotalValue;
            
            private global::System.Data.DataColumn columnCreateDate;
            
            private global::System.Data.DataColumn columnPrmCurrencySourceId;
            
            private global::System.Data.DataColumn columnPrmCurrencyId;
            
            private global::System.Data.DataColumn columnSecurityKey;
            
            private global::System.Data.DataColumn columnPrmSellBuyId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TrnAltCoinTraderValueDataTable() {
                this.TableName = "TrnAltCoinTraderValue";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TrnAltCoinTraderValueDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TrnAltCoinTraderValueDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TrnAltCoinTraderValueIdColumn {
                get {
                    return this.columnTrnAltCoinTraderValueId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TrnAltCoinTraderValueGuidColumn {
                get {
                    return this.columnTrnAltCoinTraderValueGuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MstCurrencyListGuidColumn {
                get {
                    return this.columnMstCurrencyListGuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PriceValueColumn {
                get {
                    return this.columnPriceValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CoinValueColumn {
                get {
                    return this.columnCoinValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalValueColumn {
                get {
                    return this.columnTotalValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreateDateColumn {
                get {
                    return this.columnCreateDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrmCurrencySourceIdColumn {
                get {
                    return this.columnPrmCurrencySourceId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrmCurrencyIdColumn {
                get {
                    return this.columnPrmCurrencyId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SecurityKeyColumn {
                get {
                    return this.columnSecurityKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrmSellBuyIdColumn {
                get {
                    return this.columnPrmSellBuyId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TrnAltCoinTraderValueRow this[int index] {
                get {
                    return ((TrnAltCoinTraderValueRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TrnAltCoinTraderValueRowChangeEventHandler TrnAltCoinTraderValueRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TrnAltCoinTraderValueRowChangeEventHandler TrnAltCoinTraderValueRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TrnAltCoinTraderValueRowChangeEventHandler TrnAltCoinTraderValueRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TrnAltCoinTraderValueRowChangeEventHandler TrnAltCoinTraderValueRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTrnAltCoinTraderValueRow(TrnAltCoinTraderValueRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TrnAltCoinTraderValueRow AddTrnAltCoinTraderValueRow(System.Guid TrnAltCoinTraderValueGuid, System.Guid MstCurrencyListGuid, decimal PriceValue, decimal CoinValue, decimal TotalValue, System.DateTime CreateDate, int PrmCurrencySourceId, int PrmCurrencyId, System.Guid SecurityKey, int PrmSellBuyId) {
                TrnAltCoinTraderValueRow rowTrnAltCoinTraderValueRow = ((TrnAltCoinTraderValueRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        TrnAltCoinTraderValueGuid,
                        MstCurrencyListGuid,
                        PriceValue,
                        CoinValue,
                        TotalValue,
                        CreateDate,
                        PrmCurrencySourceId,
                        PrmCurrencyId,
                        SecurityKey,
                        PrmSellBuyId};
                rowTrnAltCoinTraderValueRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTrnAltCoinTraderValueRow);
                return rowTrnAltCoinTraderValueRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TrnAltCoinTraderValueRow FindByTrnAltCoinTraderValueId(int TrnAltCoinTraderValueId) {
                return ((TrnAltCoinTraderValueRow)(this.Rows.Find(new object[] {
                            TrnAltCoinTraderValueId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TrnAltCoinTraderValueDataTable cln = ((TrnAltCoinTraderValueDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TrnAltCoinTraderValueDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnTrnAltCoinTraderValueId = base.Columns["TrnAltCoinTraderValueId"];
                this.columnTrnAltCoinTraderValueGuid = base.Columns["TrnAltCoinTraderValueGuid"];
                this.columnMstCurrencyListGuid = base.Columns["MstCurrencyListGuid"];
                this.columnPriceValue = base.Columns["PriceValue"];
                this.columnCoinValue = base.Columns["CoinValue"];
                this.columnTotalValue = base.Columns["TotalValue"];
                this.columnCreateDate = base.Columns["CreateDate"];
                this.columnPrmCurrencySourceId = base.Columns["PrmCurrencySourceId"];
                this.columnPrmCurrencyId = base.Columns["PrmCurrencyId"];
                this.columnSecurityKey = base.Columns["SecurityKey"];
                this.columnPrmSellBuyId = base.Columns["PrmSellBuyId"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnTrnAltCoinTraderValueId = new global::System.Data.DataColumn("TrnAltCoinTraderValueId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrnAltCoinTraderValueId);
                this.columnTrnAltCoinTraderValueGuid = new global::System.Data.DataColumn("TrnAltCoinTraderValueGuid", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrnAltCoinTraderValueGuid);
                this.columnMstCurrencyListGuid = new global::System.Data.DataColumn("MstCurrencyListGuid", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMstCurrencyListGuid);
                this.columnPriceValue = new global::System.Data.DataColumn("PriceValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriceValue);
                this.columnCoinValue = new global::System.Data.DataColumn("CoinValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoinValue);
                this.columnTotalValue = new global::System.Data.DataColumn("TotalValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalValue);
                this.columnCreateDate = new global::System.Data.DataColumn("CreateDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateDate);
                this.columnPrmCurrencySourceId = new global::System.Data.DataColumn("PrmCurrencySourceId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrmCurrencySourceId);
                this.columnPrmCurrencyId = new global::System.Data.DataColumn("PrmCurrencyId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrmCurrencyId);
                this.columnSecurityKey = new global::System.Data.DataColumn("SecurityKey", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSecurityKey);
                this.columnPrmSellBuyId = new global::System.Data.DataColumn("PrmSellBuyId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrmSellBuyId);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTrnAltCoinTraderValueId}, true));
                this.columnTrnAltCoinTraderValueId.AutoIncrement = true;
                this.columnTrnAltCoinTraderValueId.AutoIncrementSeed = -1;
                this.columnTrnAltCoinTraderValueId.AutoIncrementStep = -1;
                this.columnTrnAltCoinTraderValueId.AllowDBNull = false;
                this.columnTrnAltCoinTraderValueId.ReadOnly = true;
                this.columnTrnAltCoinTraderValueId.Unique = true;
                this.columnTrnAltCoinTraderValueGuid.AllowDBNull = false;
                this.columnMstCurrencyListGuid.AllowDBNull = false;
                this.columnPriceValue.AllowDBNull = false;
                this.columnCoinValue.AllowDBNull = false;
                this.columnTotalValue.AllowDBNull = false;
                this.columnCreateDate.AllowDBNull = false;
                this.columnPrmCurrencySourceId.AllowDBNull = false;
                this.columnPrmCurrencyId.AllowDBNull = false;
                this.ExtendedProperties.Add("Generator_TablePropName", "_TrnAltCoinTraderValue");
                this.ExtendedProperties.Add("Generator_UserTableName", "TrnAltCoinTraderValue");
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TrnAltCoinTraderValueRow NewTrnAltCoinTraderValueRow() {
                return ((TrnAltCoinTraderValueRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TrnAltCoinTraderValueRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TrnAltCoinTraderValueRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TrnAltCoinTraderValueRowChanged != null)) {
                    this.TrnAltCoinTraderValueRowChanged(this, new TrnAltCoinTraderValueRowChangeEvent(((TrnAltCoinTraderValueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TrnAltCoinTraderValueRowChanging != null)) {
                    this.TrnAltCoinTraderValueRowChanging(this, new TrnAltCoinTraderValueRowChangeEvent(((TrnAltCoinTraderValueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TrnAltCoinTraderValueRowDeleted != null)) {
                    this.TrnAltCoinTraderValueRowDeleted(this, new TrnAltCoinTraderValueRowChangeEvent(((TrnAltCoinTraderValueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TrnAltCoinTraderValueRowDeleting != null)) {
                    this.TrnAltCoinTraderValueRowDeleting(this, new TrnAltCoinTraderValueRowChangeEvent(((TrnAltCoinTraderValueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTrnAltCoinTraderValueRow(TrnAltCoinTraderValueRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TrnAltCoinTraderValue ds = new TrnAltCoinTraderValue();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TrnAltCoinTraderValueDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AltCoinTraderDisplayDataTable : global::System.Data.TypedTableBase<AltCoinTraderDisplayRow> {
            
            private global::System.Data.DataColumn columnDT_RowId;
            
            private global::System.Data.DataColumn columnCryptoCoin;
            
            private global::System.Data.DataColumn columnAskPrice;
            
            private global::System.Data.DataColumn columnLess25k;
            
            private global::System.Data.DataColumn columnMrgLess25k;
            
            private global::System.Data.DataColumn columnBtw25k50k;
            
            private global::System.Data.DataColumn columnMrgBtw25k50k;
            
            private global::System.Data.DataColumn columnBtw50k100k;
            
            private global::System.Data.DataColumn columnMrgBtw50k100k;
            
            private global::System.Data.DataColumn columnBtw100k150k;
            
            private global::System.Data.DataColumn columnMrgBtw100k150k;
            
            private global::System.Data.DataColumn columnBtw150k200k;
            
            private global::System.Data.DataColumn columnMrgBtw150k200k;
            
            private global::System.Data.DataColumn columnGrt200k;
            
            private global::System.Data.DataColumn columnMrgGrt200k;
            
            private global::System.Data.DataColumn columnOrderVolumeLess25k;
            
            private global::System.Data.DataColumn columnOrderVolumeBtw25k50k;
            
            private global::System.Data.DataColumn columnOrderVolumeBtw50k100k;
            
            private global::System.Data.DataColumn columnOrderVolumeBtw100k150k;
            
            private global::System.Data.DataColumn columnOrderVolumeBtw150k200k;
            
            private global::System.Data.DataColumn columnOrderVolumeGrt200k;
            
            private global::System.Data.DataColumn columnOrderCostLess25k;
            
            private global::System.Data.DataColumn columnOrderCostBtw25k50k;
            
            private global::System.Data.DataColumn columnOrderCostBtw50k100k;
            
            private global::System.Data.DataColumn columnOrderCostBtw100k150k;
            
            private global::System.Data.DataColumn columnOrderCostBtw150k200k;
            
            private global::System.Data.DataColumn columnOrderCostGrt200k;
            
            private global::System.Data.DataColumn columnSortOrder;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AltCoinTraderDisplayDataTable() {
                this.TableName = "AltCoinTraderDisplay";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AltCoinTraderDisplayDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected AltCoinTraderDisplayDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DT_RowIdColumn {
                get {
                    return this.columnDT_RowId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CryptoCoinColumn {
                get {
                    return this.columnCryptoCoin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AskPriceColumn {
                get {
                    return this.columnAskPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Less25kColumn {
                get {
                    return this.columnLess25k;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MrgLess25kColumn {
                get {
                    return this.columnMrgLess25k;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Btw25k50kColumn {
                get {
                    return this.columnBtw25k50k;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MrgBtw25k50kColumn {
                get {
                    return this.columnMrgBtw25k50k;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Btw50k100kColumn {
                get {
                    return this.columnBtw50k100k;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MrgBtw50k100kColumn {
                get {
                    return this.columnMrgBtw50k100k;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Btw100k150kColumn {
                get {
                    return this.columnBtw100k150k;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MrgBtw100k150kColumn {
                get {
                    return this.columnMrgBtw100k150k;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Btw150k200kColumn {
                get {
                    return this.columnBtw150k200k;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MrgBtw150k200kColumn {
                get {
                    return this.columnMrgBtw150k200k;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Grt200kColumn {
                get {
                    return this.columnGrt200k;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MrgGrt200kColumn {
                get {
                    return this.columnMrgGrt200k;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrderVolumeLess25kColumn {
                get {
                    return this.columnOrderVolumeLess25k;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrderVolumeBtw25k50kColumn {
                get {
                    return this.columnOrderVolumeBtw25k50k;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrderVolumeBtw50k100kColumn {
                get {
                    return this.columnOrderVolumeBtw50k100k;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrderVolumeBtw100k150kColumn {
                get {
                    return this.columnOrderVolumeBtw100k150k;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrderVolumeBtw150k200kColumn {
                get {
                    return this.columnOrderVolumeBtw150k200k;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrderVolumeGrt200kColumn {
                get {
                    return this.columnOrderVolumeGrt200k;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrderCostLess25kColumn {
                get {
                    return this.columnOrderCostLess25k;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrderCostBtw25k50kColumn {
                get {
                    return this.columnOrderCostBtw25k50k;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrderCostBtw50k100kColumn {
                get {
                    return this.columnOrderCostBtw50k100k;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrderCostBtw100k150kColumn {
                get {
                    return this.columnOrderCostBtw100k150k;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrderCostBtw150k200kColumn {
                get {
                    return this.columnOrderCostBtw150k200k;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrderCostGrt200kColumn {
                get {
                    return this.columnOrderCostGrt200k;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SortOrderColumn {
                get {
                    return this.columnSortOrder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AltCoinTraderDisplayRow this[int index] {
                get {
                    return ((AltCoinTraderDisplayRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AltCoinTraderDisplayRowChangeEventHandler AltCoinTraderDisplayRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AltCoinTraderDisplayRowChangeEventHandler AltCoinTraderDisplayRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AltCoinTraderDisplayRowChangeEventHandler AltCoinTraderDisplayRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AltCoinTraderDisplayRowChangeEventHandler AltCoinTraderDisplayRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddAltCoinTraderDisplayRow(AltCoinTraderDisplayRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AltCoinTraderDisplayRow AddAltCoinTraderDisplayRow(
                        string DT_RowId, 
                        string CryptoCoin, 
                        string AskPrice, 
                        string Less25k, 
                        string MrgLess25k, 
                        string Btw25k50k, 
                        string MrgBtw25k50k, 
                        string Btw50k100k, 
                        string MrgBtw50k100k, 
                        string Btw100k150k, 
                        string MrgBtw100k150k, 
                        string Btw150k200k, 
                        string MrgBtw150k200k, 
                        string Grt200k, 
                        string MrgGrt200k, 
                        string OrderVolumeLess25k, 
                        string OrderVolumeBtw25k50k, 
                        string OrderVolumeBtw50k100k, 
                        string OrderVolumeBtw100k150k, 
                        string OrderVolumeBtw150k200k, 
                        string OrderVolumeGrt200k, 
                        string OrderCostLess25k, 
                        string OrderCostBtw25k50k, 
                        string OrderCostBtw50k100k, 
                        string OrderCostBtw100k150k, 
                        string OrderCostBtw150k200k, 
                        string OrderCostGrt200k, 
                        int SortOrder) {
                AltCoinTraderDisplayRow rowAltCoinTraderDisplayRow = ((AltCoinTraderDisplayRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DT_RowId,
                        CryptoCoin,
                        AskPrice,
                        Less25k,
                        MrgLess25k,
                        Btw25k50k,
                        MrgBtw25k50k,
                        Btw50k100k,
                        MrgBtw50k100k,
                        Btw100k150k,
                        MrgBtw100k150k,
                        Btw150k200k,
                        MrgBtw150k200k,
                        Grt200k,
                        MrgGrt200k,
                        OrderVolumeLess25k,
                        OrderVolumeBtw25k50k,
                        OrderVolumeBtw50k100k,
                        OrderVolumeBtw100k150k,
                        OrderVolumeBtw150k200k,
                        OrderVolumeGrt200k,
                        OrderCostLess25k,
                        OrderCostBtw25k50k,
                        OrderCostBtw50k100k,
                        OrderCostBtw100k150k,
                        OrderCostBtw150k200k,
                        OrderCostGrt200k,
                        SortOrder};
                rowAltCoinTraderDisplayRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAltCoinTraderDisplayRow);
                return rowAltCoinTraderDisplayRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                AltCoinTraderDisplayDataTable cln = ((AltCoinTraderDisplayDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AltCoinTraderDisplayDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnDT_RowId = base.Columns["DT_RowId"];
                this.columnCryptoCoin = base.Columns["CryptoCoin"];
                this.columnAskPrice = base.Columns["AskPrice"];
                this.columnLess25k = base.Columns["Less25k"];
                this.columnMrgLess25k = base.Columns["MrgLess25k"];
                this.columnBtw25k50k = base.Columns["Btw25k50k"];
                this.columnMrgBtw25k50k = base.Columns["MrgBtw25k50k"];
                this.columnBtw50k100k = base.Columns["Btw50k100k"];
                this.columnMrgBtw50k100k = base.Columns["MrgBtw50k100k"];
                this.columnBtw100k150k = base.Columns["Btw100k150k"];
                this.columnMrgBtw100k150k = base.Columns["MrgBtw100k150k"];
                this.columnBtw150k200k = base.Columns["Btw150k200k"];
                this.columnMrgBtw150k200k = base.Columns["MrgBtw150k200k"];
                this.columnGrt200k = base.Columns["Grt200k"];
                this.columnMrgGrt200k = base.Columns["MrgGrt200k"];
                this.columnOrderVolumeLess25k = base.Columns["OrderVolumeLess25k"];
                this.columnOrderVolumeBtw25k50k = base.Columns["OrderVolumeBtw25k50k"];
                this.columnOrderVolumeBtw50k100k = base.Columns["OrderVolumeBtw50k100k"];
                this.columnOrderVolumeBtw100k150k = base.Columns["OrderVolumeBtw100k150k"];
                this.columnOrderVolumeBtw150k200k = base.Columns["OrderVolumeBtw150k200k"];
                this.columnOrderVolumeGrt200k = base.Columns["OrderVolumeGrt200k"];
                this.columnOrderCostLess25k = base.Columns["OrderCostLess25k"];
                this.columnOrderCostBtw25k50k = base.Columns["OrderCostBtw25k50k"];
                this.columnOrderCostBtw50k100k = base.Columns["OrderCostBtw50k100k"];
                this.columnOrderCostBtw100k150k = base.Columns["OrderCostBtw100k150k"];
                this.columnOrderCostBtw150k200k = base.Columns["OrderCostBtw150k200k"];
                this.columnOrderCostGrt200k = base.Columns["OrderCostGrt200k"];
                this.columnSortOrder = base.Columns["SortOrder"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnDT_RowId = new global::System.Data.DataColumn("DT_RowId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDT_RowId);
                this.columnCryptoCoin = new global::System.Data.DataColumn("CryptoCoin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCryptoCoin);
                this.columnAskPrice = new global::System.Data.DataColumn("AskPrice", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAskPrice);
                this.columnLess25k = new global::System.Data.DataColumn("Less25k", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLess25k);
                this.columnMrgLess25k = new global::System.Data.DataColumn("MrgLess25k", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMrgLess25k);
                this.columnBtw25k50k = new global::System.Data.DataColumn("Btw25k50k", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBtw25k50k);
                this.columnMrgBtw25k50k = new global::System.Data.DataColumn("MrgBtw25k50k", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMrgBtw25k50k);
                this.columnBtw50k100k = new global::System.Data.DataColumn("Btw50k100k", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBtw50k100k);
                this.columnMrgBtw50k100k = new global::System.Data.DataColumn("MrgBtw50k100k", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMrgBtw50k100k);
                this.columnBtw100k150k = new global::System.Data.DataColumn("Btw100k150k", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBtw100k150k);
                this.columnMrgBtw100k150k = new global::System.Data.DataColumn("MrgBtw100k150k", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMrgBtw100k150k);
                this.columnBtw150k200k = new global::System.Data.DataColumn("Btw150k200k", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBtw150k200k);
                this.columnMrgBtw150k200k = new global::System.Data.DataColumn("MrgBtw150k200k", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMrgBtw150k200k);
                this.columnGrt200k = new global::System.Data.DataColumn("Grt200k", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrt200k);
                this.columnMrgGrt200k = new global::System.Data.DataColumn("MrgGrt200k", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMrgGrt200k);
                this.columnOrderVolumeLess25k = new global::System.Data.DataColumn("OrderVolumeLess25k", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderVolumeLess25k);
                this.columnOrderVolumeBtw25k50k = new global::System.Data.DataColumn("OrderVolumeBtw25k50k", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderVolumeBtw25k50k);
                this.columnOrderVolumeBtw50k100k = new global::System.Data.DataColumn("OrderVolumeBtw50k100k", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderVolumeBtw50k100k);
                this.columnOrderVolumeBtw100k150k = new global::System.Data.DataColumn("OrderVolumeBtw100k150k", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderVolumeBtw100k150k);
                this.columnOrderVolumeBtw150k200k = new global::System.Data.DataColumn("OrderVolumeBtw150k200k", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderVolumeBtw150k200k);
                this.columnOrderVolumeGrt200k = new global::System.Data.DataColumn("OrderVolumeGrt200k", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderVolumeGrt200k);
                this.columnOrderCostLess25k = new global::System.Data.DataColumn("OrderCostLess25k", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderCostLess25k);
                this.columnOrderCostBtw25k50k = new global::System.Data.DataColumn("OrderCostBtw25k50k", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderCostBtw25k50k);
                this.columnOrderCostBtw50k100k = new global::System.Data.DataColumn("OrderCostBtw50k100k", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderCostBtw50k100k);
                this.columnOrderCostBtw100k150k = new global::System.Data.DataColumn("OrderCostBtw100k150k", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderCostBtw100k150k);
                this.columnOrderCostBtw150k200k = new global::System.Data.DataColumn("OrderCostBtw150k200k", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderCostBtw150k200k);
                this.columnOrderCostGrt200k = new global::System.Data.DataColumn("OrderCostGrt200k", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderCostGrt200k);
                this.columnSortOrder = new global::System.Data.DataColumn("SortOrder", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSortOrder);
                this.columnDT_RowId.MaxLength = 1024;
                this.columnCryptoCoin.MaxLength = 1024;
                this.columnAskPrice.MaxLength = 1024;
                this.columnLess25k.MaxLength = 1024;
                this.columnMrgLess25k.MaxLength = 1024;
                this.columnBtw25k50k.MaxLength = 1024;
                this.columnMrgBtw25k50k.MaxLength = 1024;
                this.columnBtw50k100k.MaxLength = 1024;
                this.columnMrgBtw50k100k.MaxLength = 1024;
                this.columnBtw100k150k.MaxLength = 1024;
                this.columnMrgBtw100k150k.MaxLength = 1024;
                this.columnBtw150k200k.MaxLength = 1024;
                this.columnMrgBtw150k200k.MaxLength = 1024;
                this.columnGrt200k.MaxLength = 1024;
                this.columnMrgGrt200k.MaxLength = 1024;
                this.columnOrderVolumeLess25k.MaxLength = 1024;
                this.columnOrderVolumeBtw25k50k.MaxLength = 1024;
                this.columnOrderVolumeBtw50k100k.MaxLength = 1024;
                this.columnOrderVolumeBtw100k150k.MaxLength = 1024;
                this.columnOrderVolumeBtw150k200k.MaxLength = 1024;
                this.columnOrderVolumeGrt200k.MaxLength = 1024;
                this.columnOrderCostLess25k.MaxLength = 1024;
                this.columnOrderCostBtw25k50k.MaxLength = 1024;
                this.columnOrderCostBtw50k100k.MaxLength = 1024;
                this.columnOrderCostBtw100k150k.MaxLength = 1024;
                this.columnOrderCostBtw150k200k.MaxLength = 1024;
                this.columnOrderCostGrt200k.MaxLength = 1024;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AltCoinTraderDisplayRow NewAltCoinTraderDisplayRow() {
                return ((AltCoinTraderDisplayRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AltCoinTraderDisplayRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(AltCoinTraderDisplayRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AltCoinTraderDisplayRowChanged != null)) {
                    this.AltCoinTraderDisplayRowChanged(this, new AltCoinTraderDisplayRowChangeEvent(((AltCoinTraderDisplayRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AltCoinTraderDisplayRowChanging != null)) {
                    this.AltCoinTraderDisplayRowChanging(this, new AltCoinTraderDisplayRowChangeEvent(((AltCoinTraderDisplayRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AltCoinTraderDisplayRowDeleted != null)) {
                    this.AltCoinTraderDisplayRowDeleted(this, new AltCoinTraderDisplayRowChangeEvent(((AltCoinTraderDisplayRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AltCoinTraderDisplayRowDeleting != null)) {
                    this.AltCoinTraderDisplayRowDeleting(this, new AltCoinTraderDisplayRowChangeEvent(((AltCoinTraderDisplayRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveAltCoinTraderDisplayRow(AltCoinTraderDisplayRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TrnAltCoinTraderValue ds = new TrnAltCoinTraderValue();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AltCoinTraderDisplayDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AltCoinTraderSecurityDataTable : global::System.Data.TypedTableBase<AltCoinTraderSecurityRow> {
            
            private global::System.Data.DataColumn columnSecurityKey;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AltCoinTraderSecurityDataTable() {
                this.TableName = "AltCoinTraderSecurity";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AltCoinTraderSecurityDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected AltCoinTraderSecurityDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SecurityKeyColumn {
                get {
                    return this.columnSecurityKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AltCoinTraderSecurityRow this[int index] {
                get {
                    return ((AltCoinTraderSecurityRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AltCoinTraderSecurityRowChangeEventHandler AltCoinTraderSecurityRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AltCoinTraderSecurityRowChangeEventHandler AltCoinTraderSecurityRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AltCoinTraderSecurityRowChangeEventHandler AltCoinTraderSecurityRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AltCoinTraderSecurityRowChangeEventHandler AltCoinTraderSecurityRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddAltCoinTraderSecurityRow(AltCoinTraderSecurityRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AltCoinTraderSecurityRow AddAltCoinTraderSecurityRow(System.Guid SecurityKey) {
                AltCoinTraderSecurityRow rowAltCoinTraderSecurityRow = ((AltCoinTraderSecurityRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SecurityKey};
                rowAltCoinTraderSecurityRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAltCoinTraderSecurityRow);
                return rowAltCoinTraderSecurityRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                AltCoinTraderSecurityDataTable cln = ((AltCoinTraderSecurityDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AltCoinTraderSecurityDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnSecurityKey = base.Columns["SecurityKey"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnSecurityKey = new global::System.Data.DataColumn("SecurityKey", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSecurityKey);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AltCoinTraderSecurityRow NewAltCoinTraderSecurityRow() {
                return ((AltCoinTraderSecurityRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AltCoinTraderSecurityRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(AltCoinTraderSecurityRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AltCoinTraderSecurityRowChanged != null)) {
                    this.AltCoinTraderSecurityRowChanged(this, new AltCoinTraderSecurityRowChangeEvent(((AltCoinTraderSecurityRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AltCoinTraderSecurityRowChanging != null)) {
                    this.AltCoinTraderSecurityRowChanging(this, new AltCoinTraderSecurityRowChangeEvent(((AltCoinTraderSecurityRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AltCoinTraderSecurityRowDeleted != null)) {
                    this.AltCoinTraderSecurityRowDeleted(this, new AltCoinTraderSecurityRowChangeEvent(((AltCoinTraderSecurityRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AltCoinTraderSecurityRowDeleting != null)) {
                    this.AltCoinTraderSecurityRowDeleting(this, new AltCoinTraderSecurityRowChangeEvent(((AltCoinTraderSecurityRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveAltCoinTraderSecurityRow(AltCoinTraderSecurityRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TrnAltCoinTraderValue ds = new TrnAltCoinTraderValue();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AltCoinTraderSecurityDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TrnAltCoinTraderValueRow : global::System.Data.DataRow {
            
            private TrnAltCoinTraderValueDataTable tableTrnAltCoinTraderValue;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TrnAltCoinTraderValueRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTrnAltCoinTraderValue = ((TrnAltCoinTraderValueDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TrnAltCoinTraderValueId {
                get {
                    return ((int)(this[this.tableTrnAltCoinTraderValue.TrnAltCoinTraderValueIdColumn]));
                }
                set {
                    this[this.tableTrnAltCoinTraderValue.TrnAltCoinTraderValueIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid TrnAltCoinTraderValueGuid {
                get {
                    return ((global::System.Guid)(this[this.tableTrnAltCoinTraderValue.TrnAltCoinTraderValueGuidColumn]));
                }
                set {
                    this[this.tableTrnAltCoinTraderValue.TrnAltCoinTraderValueGuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid MstCurrencyListGuid {
                get {
                    return ((global::System.Guid)(this[this.tableTrnAltCoinTraderValue.MstCurrencyListGuidColumn]));
                }
                set {
                    this[this.tableTrnAltCoinTraderValue.MstCurrencyListGuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PriceValue {
                get {
                    return ((decimal)(this[this.tableTrnAltCoinTraderValue.PriceValueColumn]));
                }
                set {
                    this[this.tableTrnAltCoinTraderValue.PriceValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CoinValue {
                get {
                    return ((decimal)(this[this.tableTrnAltCoinTraderValue.CoinValueColumn]));
                }
                set {
                    this[this.tableTrnAltCoinTraderValue.CoinValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalValue {
                get {
                    return ((decimal)(this[this.tableTrnAltCoinTraderValue.TotalValueColumn]));
                }
                set {
                    this[this.tableTrnAltCoinTraderValue.TotalValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CreateDate {
                get {
                    return ((global::System.DateTime)(this[this.tableTrnAltCoinTraderValue.CreateDateColumn]));
                }
                set {
                    this[this.tableTrnAltCoinTraderValue.CreateDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PrmCurrencySourceId {
                get {
                    return ((int)(this[this.tableTrnAltCoinTraderValue.PrmCurrencySourceIdColumn]));
                }
                set {
                    this[this.tableTrnAltCoinTraderValue.PrmCurrencySourceIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PrmCurrencyId {
                get {
                    return ((int)(this[this.tableTrnAltCoinTraderValue.PrmCurrencyIdColumn]));
                }
                set {
                    this[this.tableTrnAltCoinTraderValue.PrmCurrencyIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid SecurityKey {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableTrnAltCoinTraderValue.SecurityKeyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SecurityKey\' in table \'TrnAltCoinTraderValue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTrnAltCoinTraderValue.SecurityKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PrmSellBuyId {
                get {
                    try {
                        return ((int)(this[this.tableTrnAltCoinTraderValue.PrmSellBuyIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrmSellBuyId\' in table \'TrnAltCoinTraderValue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTrnAltCoinTraderValue.PrmSellBuyIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSecurityKeyNull() {
                return this.IsNull(this.tableTrnAltCoinTraderValue.SecurityKeyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSecurityKeyNull() {
                this[this.tableTrnAltCoinTraderValue.SecurityKeyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrmSellBuyIdNull() {
                return this.IsNull(this.tableTrnAltCoinTraderValue.PrmSellBuyIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrmSellBuyIdNull() {
                this[this.tableTrnAltCoinTraderValue.PrmSellBuyIdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class AltCoinTraderDisplayRow : global::System.Data.DataRow {
            
            private AltCoinTraderDisplayDataTable tableAltCoinTraderDisplay;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AltCoinTraderDisplayRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAltCoinTraderDisplay = ((AltCoinTraderDisplayDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DT_RowId {
                get {
                    try {
                        return ((string)(this[this.tableAltCoinTraderDisplay.DT_RowIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DT_RowId\' in table \'AltCoinTraderDisplay\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAltCoinTraderDisplay.DT_RowIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CryptoCoin {
                get {
                    try {
                        return ((string)(this[this.tableAltCoinTraderDisplay.CryptoCoinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CryptoCoin\' in table \'AltCoinTraderDisplay\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAltCoinTraderDisplay.CryptoCoinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AskPrice {
                get {
                    try {
                        return ((string)(this[this.tableAltCoinTraderDisplay.AskPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AskPrice\' in table \'AltCoinTraderDisplay\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAltCoinTraderDisplay.AskPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Less25k {
                get {
                    try {
                        return ((string)(this[this.tableAltCoinTraderDisplay.Less25kColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Less25k\' in table \'AltCoinTraderDisplay\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAltCoinTraderDisplay.Less25kColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MrgLess25k {
                get {
                    try {
                        return ((string)(this[this.tableAltCoinTraderDisplay.MrgLess25kColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MrgLess25k\' in table \'AltCoinTraderDisplay\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAltCoinTraderDisplay.MrgLess25kColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Btw25k50k {
                get {
                    try {
                        return ((string)(this[this.tableAltCoinTraderDisplay.Btw25k50kColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Btw25k50k\' in table \'AltCoinTraderDisplay\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAltCoinTraderDisplay.Btw25k50kColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MrgBtw25k50k {
                get {
                    try {
                        return ((string)(this[this.tableAltCoinTraderDisplay.MrgBtw25k50kColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MrgBtw25k50k\' in table \'AltCoinTraderDisplay\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAltCoinTraderDisplay.MrgBtw25k50kColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Btw50k100k {
                get {
                    try {
                        return ((string)(this[this.tableAltCoinTraderDisplay.Btw50k100kColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Btw50k100k\' in table \'AltCoinTraderDisplay\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAltCoinTraderDisplay.Btw50k100kColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MrgBtw50k100k {
                get {
                    try {
                        return ((string)(this[this.tableAltCoinTraderDisplay.MrgBtw50k100kColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MrgBtw50k100k\' in table \'AltCoinTraderDisplay\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAltCoinTraderDisplay.MrgBtw50k100kColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Btw100k150k {
                get {
                    try {
                        return ((string)(this[this.tableAltCoinTraderDisplay.Btw100k150kColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Btw100k150k\' in table \'AltCoinTraderDisplay\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAltCoinTraderDisplay.Btw100k150kColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MrgBtw100k150k {
                get {
                    try {
                        return ((string)(this[this.tableAltCoinTraderDisplay.MrgBtw100k150kColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MrgBtw100k150k\' in table \'AltCoinTraderDisplay\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAltCoinTraderDisplay.MrgBtw100k150kColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Btw150k200k {
                get {
                    try {
                        return ((string)(this[this.tableAltCoinTraderDisplay.Btw150k200kColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Btw150k200k\' in table \'AltCoinTraderDisplay\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAltCoinTraderDisplay.Btw150k200kColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MrgBtw150k200k {
                get {
                    try {
                        return ((string)(this[this.tableAltCoinTraderDisplay.MrgBtw150k200kColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MrgBtw150k200k\' in table \'AltCoinTraderDisplay\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAltCoinTraderDisplay.MrgBtw150k200kColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Grt200k {
                get {
                    try {
                        return ((string)(this[this.tableAltCoinTraderDisplay.Grt200kColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Grt200k\' in table \'AltCoinTraderDisplay\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAltCoinTraderDisplay.Grt200kColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MrgGrt200k {
                get {
                    try {
                        return ((string)(this[this.tableAltCoinTraderDisplay.MrgGrt200kColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MrgGrt200k\' in table \'AltCoinTraderDisplay\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAltCoinTraderDisplay.MrgGrt200kColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OrderVolumeLess25k {
                get {
                    try {
                        return ((string)(this[this.tableAltCoinTraderDisplay.OrderVolumeLess25kColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderVolumeLess25k\' in table \'AltCoinTraderDisplay\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableAltCoinTraderDisplay.OrderVolumeLess25kColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OrderVolumeBtw25k50k {
                get {
                    try {
                        return ((string)(this[this.tableAltCoinTraderDisplay.OrderVolumeBtw25k50kColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderVolumeBtw25k50k\' in table \'AltCoinTraderDisplay\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableAltCoinTraderDisplay.OrderVolumeBtw25k50kColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OrderVolumeBtw50k100k {
                get {
                    try {
                        return ((string)(this[this.tableAltCoinTraderDisplay.OrderVolumeBtw50k100kColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderVolumeBtw50k100k\' in table \'AltCoinTraderDisplay\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableAltCoinTraderDisplay.OrderVolumeBtw50k100kColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OrderVolumeBtw100k150k {
                get {
                    try {
                        return ((string)(this[this.tableAltCoinTraderDisplay.OrderVolumeBtw100k150kColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderVolumeBtw100k150k\' in table \'AltCoinTraderDisplay\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableAltCoinTraderDisplay.OrderVolumeBtw100k150kColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OrderVolumeBtw150k200k {
                get {
                    try {
                        return ((string)(this[this.tableAltCoinTraderDisplay.OrderVolumeBtw150k200kColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderVolumeBtw150k200k\' in table \'AltCoinTraderDisplay\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableAltCoinTraderDisplay.OrderVolumeBtw150k200kColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OrderVolumeGrt200k {
                get {
                    try {
                        return ((string)(this[this.tableAltCoinTraderDisplay.OrderVolumeGrt200kColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderVolumeGrt200k\' in table \'AltCoinTraderDisplay\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableAltCoinTraderDisplay.OrderVolumeGrt200kColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OrderCostLess25k {
                get {
                    try {
                        return ((string)(this[this.tableAltCoinTraderDisplay.OrderCostLess25kColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderCostLess25k\' in table \'AltCoinTraderDisplay\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableAltCoinTraderDisplay.OrderCostLess25kColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OrderCostBtw25k50k {
                get {
                    try {
                        return ((string)(this[this.tableAltCoinTraderDisplay.OrderCostBtw25k50kColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderCostBtw25k50k\' in table \'AltCoinTraderDisplay\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableAltCoinTraderDisplay.OrderCostBtw25k50kColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OrderCostBtw50k100k {
                get {
                    try {
                        return ((string)(this[this.tableAltCoinTraderDisplay.OrderCostBtw50k100kColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderCostBtw50k100k\' in table \'AltCoinTraderDisplay\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableAltCoinTraderDisplay.OrderCostBtw50k100kColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OrderCostBtw100k150k {
                get {
                    try {
                        return ((string)(this[this.tableAltCoinTraderDisplay.OrderCostBtw100k150kColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderCostBtw100k150k\' in table \'AltCoinTraderDisplay\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableAltCoinTraderDisplay.OrderCostBtw100k150kColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OrderCostBtw150k200k {
                get {
                    try {
                        return ((string)(this[this.tableAltCoinTraderDisplay.OrderCostBtw150k200kColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderCostBtw150k200k\' in table \'AltCoinTraderDisplay\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableAltCoinTraderDisplay.OrderCostBtw150k200kColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OrderCostGrt200k {
                get {
                    try {
                        return ((string)(this[this.tableAltCoinTraderDisplay.OrderCostGrt200kColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderCostGrt200k\' in table \'AltCoinTraderDisplay\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableAltCoinTraderDisplay.OrderCostGrt200kColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SortOrder {
                get {
                    try {
                        return ((int)(this[this.tableAltCoinTraderDisplay.SortOrderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SortOrder\' in table \'AltCoinTraderDisplay\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAltCoinTraderDisplay.SortOrderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDT_RowIdNull() {
                return this.IsNull(this.tableAltCoinTraderDisplay.DT_RowIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDT_RowIdNull() {
                this[this.tableAltCoinTraderDisplay.DT_RowIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCryptoCoinNull() {
                return this.IsNull(this.tableAltCoinTraderDisplay.CryptoCoinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCryptoCoinNull() {
                this[this.tableAltCoinTraderDisplay.CryptoCoinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAskPriceNull() {
                return this.IsNull(this.tableAltCoinTraderDisplay.AskPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAskPriceNull() {
                this[this.tableAltCoinTraderDisplay.AskPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLess25kNull() {
                return this.IsNull(this.tableAltCoinTraderDisplay.Less25kColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLess25kNull() {
                this[this.tableAltCoinTraderDisplay.Less25kColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMrgLess25kNull() {
                return this.IsNull(this.tableAltCoinTraderDisplay.MrgLess25kColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMrgLess25kNull() {
                this[this.tableAltCoinTraderDisplay.MrgLess25kColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBtw25k50kNull() {
                return this.IsNull(this.tableAltCoinTraderDisplay.Btw25k50kColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBtw25k50kNull() {
                this[this.tableAltCoinTraderDisplay.Btw25k50kColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMrgBtw25k50kNull() {
                return this.IsNull(this.tableAltCoinTraderDisplay.MrgBtw25k50kColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMrgBtw25k50kNull() {
                this[this.tableAltCoinTraderDisplay.MrgBtw25k50kColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBtw50k100kNull() {
                return this.IsNull(this.tableAltCoinTraderDisplay.Btw50k100kColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBtw50k100kNull() {
                this[this.tableAltCoinTraderDisplay.Btw50k100kColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMrgBtw50k100kNull() {
                return this.IsNull(this.tableAltCoinTraderDisplay.MrgBtw50k100kColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMrgBtw50k100kNull() {
                this[this.tableAltCoinTraderDisplay.MrgBtw50k100kColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBtw100k150kNull() {
                return this.IsNull(this.tableAltCoinTraderDisplay.Btw100k150kColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBtw100k150kNull() {
                this[this.tableAltCoinTraderDisplay.Btw100k150kColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMrgBtw100k150kNull() {
                return this.IsNull(this.tableAltCoinTraderDisplay.MrgBtw100k150kColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMrgBtw100k150kNull() {
                this[this.tableAltCoinTraderDisplay.MrgBtw100k150kColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBtw150k200kNull() {
                return this.IsNull(this.tableAltCoinTraderDisplay.Btw150k200kColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBtw150k200kNull() {
                this[this.tableAltCoinTraderDisplay.Btw150k200kColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMrgBtw150k200kNull() {
                return this.IsNull(this.tableAltCoinTraderDisplay.MrgBtw150k200kColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMrgBtw150k200kNull() {
                this[this.tableAltCoinTraderDisplay.MrgBtw150k200kColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGrt200kNull() {
                return this.IsNull(this.tableAltCoinTraderDisplay.Grt200kColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGrt200kNull() {
                this[this.tableAltCoinTraderDisplay.Grt200kColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMrgGrt200kNull() {
                return this.IsNull(this.tableAltCoinTraderDisplay.MrgGrt200kColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMrgGrt200kNull() {
                this[this.tableAltCoinTraderDisplay.MrgGrt200kColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOrderVolumeLess25kNull() {
                return this.IsNull(this.tableAltCoinTraderDisplay.OrderVolumeLess25kColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOrderVolumeLess25kNull() {
                this[this.tableAltCoinTraderDisplay.OrderVolumeLess25kColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOrderVolumeBtw25k50kNull() {
                return this.IsNull(this.tableAltCoinTraderDisplay.OrderVolumeBtw25k50kColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOrderVolumeBtw25k50kNull() {
                this[this.tableAltCoinTraderDisplay.OrderVolumeBtw25k50kColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOrderVolumeBtw50k100kNull() {
                return this.IsNull(this.tableAltCoinTraderDisplay.OrderVolumeBtw50k100kColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOrderVolumeBtw50k100kNull() {
                this[this.tableAltCoinTraderDisplay.OrderVolumeBtw50k100kColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOrderVolumeBtw100k150kNull() {
                return this.IsNull(this.tableAltCoinTraderDisplay.OrderVolumeBtw100k150kColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOrderVolumeBtw100k150kNull() {
                this[this.tableAltCoinTraderDisplay.OrderVolumeBtw100k150kColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOrderVolumeBtw150k200kNull() {
                return this.IsNull(this.tableAltCoinTraderDisplay.OrderVolumeBtw150k200kColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOrderVolumeBtw150k200kNull() {
                this[this.tableAltCoinTraderDisplay.OrderVolumeBtw150k200kColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOrderVolumeGrt200kNull() {
                return this.IsNull(this.tableAltCoinTraderDisplay.OrderVolumeGrt200kColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOrderVolumeGrt200kNull() {
                this[this.tableAltCoinTraderDisplay.OrderVolumeGrt200kColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOrderCostLess25kNull() {
                return this.IsNull(this.tableAltCoinTraderDisplay.OrderCostLess25kColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOrderCostLess25kNull() {
                this[this.tableAltCoinTraderDisplay.OrderCostLess25kColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOrderCostBtw25k50kNull() {
                return this.IsNull(this.tableAltCoinTraderDisplay.OrderCostBtw25k50kColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOrderCostBtw25k50kNull() {
                this[this.tableAltCoinTraderDisplay.OrderCostBtw25k50kColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOrderCostBtw50k100kNull() {
                return this.IsNull(this.tableAltCoinTraderDisplay.OrderCostBtw50k100kColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOrderCostBtw50k100kNull() {
                this[this.tableAltCoinTraderDisplay.OrderCostBtw50k100kColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOrderCostBtw100k150kNull() {
                return this.IsNull(this.tableAltCoinTraderDisplay.OrderCostBtw100k150kColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOrderCostBtw100k150kNull() {
                this[this.tableAltCoinTraderDisplay.OrderCostBtw100k150kColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOrderCostBtw150k200kNull() {
                return this.IsNull(this.tableAltCoinTraderDisplay.OrderCostBtw150k200kColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOrderCostBtw150k200kNull() {
                this[this.tableAltCoinTraderDisplay.OrderCostBtw150k200kColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOrderCostGrt200kNull() {
                return this.IsNull(this.tableAltCoinTraderDisplay.OrderCostGrt200kColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOrderCostGrt200kNull() {
                this[this.tableAltCoinTraderDisplay.OrderCostGrt200kColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSortOrderNull() {
                return this.IsNull(this.tableAltCoinTraderDisplay.SortOrderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSortOrderNull() {
                this[this.tableAltCoinTraderDisplay.SortOrderColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class AltCoinTraderSecurityRow : global::System.Data.DataRow {
            
            private AltCoinTraderSecurityDataTable tableAltCoinTraderSecurity;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AltCoinTraderSecurityRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAltCoinTraderSecurity = ((AltCoinTraderSecurityDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid SecurityKey {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableAltCoinTraderSecurity.SecurityKeyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SecurityKey\' in table \'AltCoinTraderSecurity\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAltCoinTraderSecurity.SecurityKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSecurityKeyNull() {
                return this.IsNull(this.tableAltCoinTraderSecurity.SecurityKeyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSecurityKeyNull() {
                this[this.tableAltCoinTraderSecurity.SecurityKeyColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TrnAltCoinTraderValueRowChangeEvent : global::System.EventArgs {
            
            private TrnAltCoinTraderValueRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TrnAltCoinTraderValueRowChangeEvent(TrnAltCoinTraderValueRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TrnAltCoinTraderValueRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class AltCoinTraderDisplayRowChangeEvent : global::System.EventArgs {
            
            private AltCoinTraderDisplayRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AltCoinTraderDisplayRowChangeEvent(AltCoinTraderDisplayRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AltCoinTraderDisplayRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class AltCoinTraderSecurityRowChangeEvent : global::System.EventArgs {
            
            private AltCoinTraderSecurityRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AltCoinTraderSecurityRowChangeEvent(AltCoinTraderSecurityRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AltCoinTraderSecurityRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace DataLayer.TrnAltCoinTraderValueTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TrnAltCoinTraderValueTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TrnAltCoinTraderValueTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TrnAltCoinTraderValue";
            tableMapping.ColumnMappings.Add("TrnAltCoinTraderValueId", "TrnAltCoinTraderValueId");
            tableMapping.ColumnMappings.Add("TrnAltCoinTraderValueGuid", "TrnAltCoinTraderValueGuid");
            tableMapping.ColumnMappings.Add("MstCurrencyListGuid", "MstCurrencyListGuid");
            tableMapping.ColumnMappings.Add("PriceValue", "PriceValue");
            tableMapping.ColumnMappings.Add("CoinValue", "CoinValue");
            tableMapping.ColumnMappings.Add("TotalValue", "TotalValue");
            tableMapping.ColumnMappings.Add("CreateDate", "CreateDate");
            tableMapping.ColumnMappings.Add("PrmCurrencySourceId", "PrmCurrencySourceId");
            tableMapping.ColumnMappings.Add("PrmCurrencyId", "PrmCurrencyId");
            tableMapping.ColumnMappings.Add("SecurityKey", "SecurityKey");
            tableMapping.ColumnMappings.Add("PrmSellBuyId", "PrmSellBuyId");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [TrnAltCoinTraderValue] WHERE (([TrnAltCoinTraderValueId] = @Original_TrnAltCoinTraderValueId) AND ([TrnAltCoinTraderValueGuid] = @Original_TrnAltCoinTraderValueGuid) AND ([MstCurrencyListGuid] = @Original_MstCurrencyListGuid) AND ([PriceValue] = @Original_PriceValue) AND ([CoinValue] = @Original_CoinValue) AND ([TotalValue] = @Original_TotalValue) AND ([CreateDate] = @Original_CreateDate) AND ([PrmCurrencySourceId] = @Original_PrmCurrencySourceId) AND ([PrmCurrencyId] = @Original_PrmCurrencyId) AND ((@IsNull_SecurityKey = 1 AND [SecurityKey] IS NULL) OR ([SecurityKey] = @Original_SecurityKey)) AND ((@IsNull_PrmSellBuyId = 1 AND [PrmSellBuyId] IS NULL) OR ([PrmSellBuyId] = @Original_PrmSellBuyId)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TrnAltCoinTraderValueId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrnAltCoinTraderValueId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TrnAltCoinTraderValueGuid", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrnAltCoinTraderValueGuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MstCurrencyListGuid", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MstCurrencyListGuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PriceValue", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PriceValue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CoinValue", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CoinValue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalValue", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalValue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreateDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreateDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PrmCurrencySourceId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrmCurrencySourceId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PrmCurrencyId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrmCurrencyId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SecurityKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecurityKey", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SecurityKey", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecurityKey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PrmSellBuyId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrmSellBuyId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PrmSellBuyId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrmSellBuyId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [TrnAltCoinTraderValue] ([TrnAltCoinTraderValueGuid], [MstCurrencyListGuid], [PriceValue], [CoinValue], [TotalValue], [CreateDate], [PrmCurrencySourceId], [PrmCurrencyId], [SecurityKey], [PrmSellBuyId]) VALUES (@TrnAltCoinTraderValueGuid, @MstCurrencyListGuid, @PriceValue, @CoinValue, @TotalValue, @CreateDate, @PrmCurrencySourceId, @PrmCurrencyId, @SecurityKey, @PrmSellBuyId);
SELECT TrnAltCoinTraderValueId, TrnAltCoinTraderValueGuid, MstCurrencyListGuid, PriceValue, CoinValue, TotalValue, CreateDate, PrmCurrencySourceId, PrmCurrencyId, SecurityKey, PrmSellBuyId FROM TrnAltCoinTraderValue WHERE (TrnAltCoinTraderValueId = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrnAltCoinTraderValueGuid", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrnAltCoinTraderValueGuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MstCurrencyListGuid", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MstCurrencyListGuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PriceValue", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PriceValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CoinValue", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CoinValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalValue", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreateDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreateDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrmCurrencySourceId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrmCurrencySourceId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrmCurrencyId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrmCurrencyId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SecurityKey", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecurityKey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrmSellBuyId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrmSellBuyId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [TrnAltCoinTraderValue] SET [TrnAltCoinTraderValueGuid] = @TrnAltCoinTraderValueGuid, [MstCurrencyListGuid] = @MstCurrencyListGuid, [PriceValue] = @PriceValue, [CoinValue] = @CoinValue, [TotalValue] = @TotalValue, [CreateDate] = @CreateDate, [PrmCurrencySourceId] = @PrmCurrencySourceId, [PrmCurrencyId] = @PrmCurrencyId, [SecurityKey] = @SecurityKey, [PrmSellBuyId] = @PrmSellBuyId WHERE (([TrnAltCoinTraderValueId] = @Original_TrnAltCoinTraderValueId) AND ([TrnAltCoinTraderValueGuid] = @Original_TrnAltCoinTraderValueGuid) AND ([MstCurrencyListGuid] = @Original_MstCurrencyListGuid) AND ([PriceValue] = @Original_PriceValue) AND ([CoinValue] = @Original_CoinValue) AND ([TotalValue] = @Original_TotalValue) AND ([CreateDate] = @Original_CreateDate) AND ([PrmCurrencySourceId] = @Original_PrmCurrencySourceId) AND ([PrmCurrencyId] = @Original_PrmCurrencyId) AND ((@IsNull_SecurityKey = 1 AND [SecurityKey] IS NULL) OR ([SecurityKey] = @Original_SecurityKey)) AND ((@IsNull_PrmSellBuyId = 1 AND [PrmSellBuyId] IS NULL) OR ([PrmSellBuyId] = @Original_PrmSellBuyId)));
SELECT TrnAltCoinTraderValueId, TrnAltCoinTraderValueGuid, MstCurrencyListGuid, PriceValue, CoinValue, TotalValue, CreateDate, PrmCurrencySourceId, PrmCurrencyId, SecurityKey, PrmSellBuyId FROM TrnAltCoinTraderValue WHERE (TrnAltCoinTraderValueId = @TrnAltCoinTraderValueId)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrnAltCoinTraderValueGuid", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrnAltCoinTraderValueGuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MstCurrencyListGuid", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MstCurrencyListGuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PriceValue", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PriceValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CoinValue", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CoinValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalValue", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalValue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreateDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreateDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrmCurrencySourceId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrmCurrencySourceId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrmCurrencyId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrmCurrencyId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SecurityKey", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecurityKey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrmSellBuyId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrmSellBuyId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TrnAltCoinTraderValueId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrnAltCoinTraderValueId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TrnAltCoinTraderValueGuid", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TrnAltCoinTraderValueGuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MstCurrencyListGuid", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MstCurrencyListGuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PriceValue", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PriceValue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CoinValue", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CoinValue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalValue", global::System.Data.SqlDbType.Money, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalValue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreateDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreateDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PrmCurrencySourceId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrmCurrencySourceId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PrmCurrencyId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrmCurrencyId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SecurityKey", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecurityKey", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SecurityKey", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SecurityKey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PrmSellBuyId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrmSellBuyId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PrmSellBuyId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PrmSellBuyId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TrnAltCoinTraderValueId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "TrnAltCoinTraderValueId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::DataLayer.Properties.Settings.Default.CurrencyExchangeConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        TrnAltCoinTraderValueId, TrnAltCoinTraderValueGuid, MstCurrencyList" +
                "Guid, PriceValue, CoinValue, TotalValue, CreateDate, PrmCurrencySourceId, PrmCur" +
                "rencyId, SecurityKey, PrmSellBuyId\r\nFROM            TrnAltCoinTraderValue";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT CoinValue, CreateDate, MstCurrencyListGuid, PriceValue, PrmCurrencyId, PrmCurrencySourceId, PrmSellBuyId, SecurityKey, TotalValue, TrnAltCoinTraderValueGuid, TrnAltCoinTraderValueId FROM TrnAltCoinTraderValue WHERE (SecurityKey = @SecurityKey) AND (PrmSellBuyId = @PrmSellBuyId)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SecurityKey", global::System.Data.SqlDbType.UniqueIdentifier, 16, global::System.Data.ParameterDirection.Input, 0, 0, "SecurityKey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrmSellBuyId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "PrmSellBuyId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual TrnAltCoinTraderValue.TrnAltCoinTraderValueDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            TrnAltCoinTraderValue.TrnAltCoinTraderValueDataTable dataTable = new TrnAltCoinTraderValue.TrnAltCoinTraderValueDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual TrnAltCoinTraderValue.TrnAltCoinTraderValueDataTable GetRowsForSecurityKey(global::System.Nullable<global::System.Guid> SecurityKey, global::System.Nullable<int> PrmSellBuyId) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((SecurityKey.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.Guid)(SecurityKey.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((PrmSellBuyId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(PrmSellBuyId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            TrnAltCoinTraderValue.TrnAltCoinTraderValueDataTable dataTable = new TrnAltCoinTraderValue.TrnAltCoinTraderValueDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(TrnAltCoinTraderValue.TrnAltCoinTraderValueDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(TrnAltCoinTraderValue dataSet) {
            return this.Adapter.Update(dataSet, "TrnAltCoinTraderValue");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_TrnAltCoinTraderValueId, System.Guid Original_TrnAltCoinTraderValueGuid, System.Guid Original_MstCurrencyListGuid, decimal Original_PriceValue, decimal Original_CoinValue, decimal Original_TotalValue, System.DateTime Original_CreateDate, int Original_PrmCurrencySourceId, int Original_PrmCurrencyId, global::System.Nullable<global::System.Guid> Original_SecurityKey, global::System.Nullable<int> Original_PrmSellBuyId) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_TrnAltCoinTraderValueId));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.Guid)(Original_TrnAltCoinTraderValueGuid));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.Guid)(Original_MstCurrencyListGuid));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_PriceValue));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_CoinValue));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((decimal)(Original_TotalValue));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_CreateDate));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_PrmCurrencySourceId));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_PrmCurrencyId));
            if ((Original_SecurityKey.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((System.Guid)(Original_SecurityKey.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_PrmSellBuyId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_PrmSellBuyId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.Guid TrnAltCoinTraderValueGuid, System.Guid MstCurrencyListGuid, decimal PriceValue, decimal CoinValue, decimal TotalValue, System.DateTime CreateDate, int PrmCurrencySourceId, int PrmCurrencyId, global::System.Nullable<global::System.Guid> SecurityKey, global::System.Nullable<int> PrmSellBuyId) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.Guid)(TrnAltCoinTraderValueGuid));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.Guid)(MstCurrencyListGuid));
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(PriceValue));
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(CoinValue));
            this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(TotalValue));
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(CreateDate));
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(PrmCurrencySourceId));
            this.Adapter.InsertCommand.Parameters[7].Value = ((int)(PrmCurrencyId));
            if ((SecurityKey.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((System.Guid)(SecurityKey.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((PrmSellBuyId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((int)(PrmSellBuyId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.Guid TrnAltCoinTraderValueGuid, 
                    System.Guid MstCurrencyListGuid, 
                    decimal PriceValue, 
                    decimal CoinValue, 
                    decimal TotalValue, 
                    System.DateTime CreateDate, 
                    int PrmCurrencySourceId, 
                    int PrmCurrencyId, 
                    global::System.Nullable<global::System.Guid> SecurityKey, 
                    global::System.Nullable<int> PrmSellBuyId, 
                    int Original_TrnAltCoinTraderValueId, 
                    System.Guid Original_TrnAltCoinTraderValueGuid, 
                    System.Guid Original_MstCurrencyListGuid, 
                    decimal Original_PriceValue, 
                    decimal Original_CoinValue, 
                    decimal Original_TotalValue, 
                    System.DateTime Original_CreateDate, 
                    int Original_PrmCurrencySourceId, 
                    int Original_PrmCurrencyId, 
                    global::System.Nullable<global::System.Guid> Original_SecurityKey, 
                    global::System.Nullable<int> Original_PrmSellBuyId, 
                    int TrnAltCoinTraderValueId) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.Guid)(TrnAltCoinTraderValueGuid));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.Guid)(MstCurrencyListGuid));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(PriceValue));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(CoinValue));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(TotalValue));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(CreateDate));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(PrmCurrencySourceId));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(PrmCurrencyId));
            if ((SecurityKey.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((System.Guid)(SecurityKey.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((PrmSellBuyId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(PrmSellBuyId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_TrnAltCoinTraderValueId));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((System.Guid)(Original_TrnAltCoinTraderValueGuid));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((System.Guid)(Original_MstCurrencyListGuid));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(Original_PriceValue));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(Original_CoinValue));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(Original_TotalValue));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(Original_CreateDate));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_PrmCurrencySourceId));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Original_PrmCurrencyId));
            if ((Original_SecurityKey.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((System.Guid)(Original_SecurityKey.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_PrmSellBuyId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(Original_PrmSellBuyId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(TrnAltCoinTraderValueId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.Guid TrnAltCoinTraderValueGuid, 
                    System.Guid MstCurrencyListGuid, 
                    decimal PriceValue, 
                    decimal CoinValue, 
                    decimal TotalValue, 
                    System.DateTime CreateDate, 
                    int PrmCurrencySourceId, 
                    int PrmCurrencyId, 
                    global::System.Nullable<global::System.Guid> SecurityKey, 
                    global::System.Nullable<int> PrmSellBuyId, 
                    int Original_TrnAltCoinTraderValueId, 
                    System.Guid Original_TrnAltCoinTraderValueGuid, 
                    System.Guid Original_MstCurrencyListGuid, 
                    decimal Original_PriceValue, 
                    decimal Original_CoinValue, 
                    decimal Original_TotalValue, 
                    System.DateTime Original_CreateDate, 
                    int Original_PrmCurrencySourceId, 
                    int Original_PrmCurrencyId, 
                    global::System.Nullable<global::System.Guid> Original_SecurityKey, 
                    global::System.Nullable<int> Original_PrmSellBuyId) {
            return this.Update(TrnAltCoinTraderValueGuid, MstCurrencyListGuid, PriceValue, CoinValue, TotalValue, CreateDate, PrmCurrencySourceId, PrmCurrencyId, SecurityKey, PrmSellBuyId, Original_TrnAltCoinTraderValueId, Original_TrnAltCoinTraderValueGuid, Original_MstCurrencyListGuid, Original_PriceValue, Original_CoinValue, Original_TotalValue, Original_CreateDate, Original_PrmCurrencySourceId, Original_PrmCurrencyId, Original_SecurityKey, Original_PrmSellBuyId, Original_TrnAltCoinTraderValueId);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class AltCoinTraderDisplayTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AltCoinTraderDisplayTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "AltCoinTraderDisplay";
            tableMapping.ColumnMappings.Add("DT_RowId", "DT_RowId");
            tableMapping.ColumnMappings.Add("CryptoCoin", "CryptoCoin");
            tableMapping.ColumnMappings.Add("AskPrice", "AskPrice");
            tableMapping.ColumnMappings.Add("Less25k", "Less25k");
            tableMapping.ColumnMappings.Add("MrgLess25k", "MrgLess25k");
            tableMapping.ColumnMappings.Add("Btw25k50k", "Btw25k50k");
            tableMapping.ColumnMappings.Add("MrgBtw25k50k", "MrgBtw25k50k");
            tableMapping.ColumnMappings.Add("Btw50k100k", "Btw50k100k");
            tableMapping.ColumnMappings.Add("MrgBtw50k100k", "MrgBtw50k100k");
            tableMapping.ColumnMappings.Add("Btw100k150k", "Btw100k150k");
            tableMapping.ColumnMappings.Add("MrgBtw100k150k", "MrgBtw100k150k");
            tableMapping.ColumnMappings.Add("Btw150k200k", "Btw150k200k");
            tableMapping.ColumnMappings.Add("MrgBtw150k200k", "MrgBtw150k200k");
            tableMapping.ColumnMappings.Add("Grt200k", "Grt200k");
            tableMapping.ColumnMappings.Add("MrgGrt200k", "MrgGrt200k");
            tableMapping.ColumnMappings.Add("OrderVolumeLess25k", "OrderVolumeLess25k");
            tableMapping.ColumnMappings.Add("OrderVolumeBtw25k50k", "OrderVolumeBtw25k50k");
            tableMapping.ColumnMappings.Add("OrderVolumeBtw50k100k", "OrderVolumeBtw50k100k");
            tableMapping.ColumnMappings.Add("OrderVolumeBtw100k150k", "OrderVolumeBtw100k150k");
            tableMapping.ColumnMappings.Add("OrderVolumeBtw150k200k", "OrderVolumeBtw150k200k");
            tableMapping.ColumnMappings.Add("OrderVolumeGrt200k", "OrderVolumeGrt200k");
            tableMapping.ColumnMappings.Add("OrderCostLess25k", "OrderCostLess25k");
            tableMapping.ColumnMappings.Add("OrderCostBtw25k50k", "OrderCostBtw25k50k");
            tableMapping.ColumnMappings.Add("OrderCostBtw50k100k", "OrderCostBtw50k100k");
            tableMapping.ColumnMappings.Add("OrderCostBtw100k150k", "OrderCostBtw100k150k");
            tableMapping.ColumnMappings.Add("OrderCostBtw150k200k", "OrderCostBtw150k200k");
            tableMapping.ColumnMappings.Add("OrderCostGrt200k", "OrderCostGrt200k");
            tableMapping.ColumnMappings.Add("SortOrder", "SortOrder");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::DataLayer.Properties.Settings.Default.CurrencyExchangeConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"        SELECT
            '' AS DT_RowId ,
            '' AS CryptoCoin ,
            '' AS AskPrice ,
            '' AS Less25k ,
			'' AS OrderVolumeLess25k ,
			'' AS OrderCostLess25k ,
            '' AS MrgLess25k ,
            '' AS Btw25k50k ,
			'' AS OrderVolumeBtw25k50k,
			'' AS OrderCostBtw25k50k ,
            '' AS MrgBtw25k50k ,
            '' AS Btw50k100k ,
			'' AS OrderVolumeBtw50k100k ,
			'' AS OrderCostBtw50k100k,
            '' AS MrgBtw50k100k  ,
            '' AS Btw100k150k ,
			'' AS OrderVolumeBtw100k150k ,
			'' AS OrderCostBtw100k150k  ,
            '' AS MrgBtw100k150k ,
            '' AS Btw150k200k ,
			'' AS OrderVolumeBtw150k200k,
			'' AS OrderCostBtw150k200k ,
            '' AS MrgBtw150k200k ,
            '' AS Grt200k ,
			'' AS OrderVolumeGrt200k ,
			'' AS OrderCostGrt200k,
            '' AS MrgGrt200k,
'' AS SortOrder";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual TrnAltCoinTraderValue.AltCoinTraderDisplayDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            TrnAltCoinTraderValue.AltCoinTraderDisplayDataTable dataTable = new TrnAltCoinTraderValue.AltCoinTraderDisplayDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class AltCoinTraderSecurityTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AltCoinTraderSecurityTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "AltCoinTraderSecurity";
            tableMapping.ColumnMappings.Add("SecurityKey", "SecurityKey");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::DataLayer.Properties.Settings.Default.CurrencyExchangeConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT TOP 1 SecurityKey FROM TrnAltCoinTraderValue\r\nWHERE MstCurrencyListGuid=@M" +
                "stCurrencyListGuid\r\nAND PrmSellBuyId = @PrmSellBuyId\r\nORDER BY CreateDate DESC";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MstCurrencyListGuid", global::System.Data.SqlDbType.UniqueIdentifier, 16, global::System.Data.ParameterDirection.Input, 0, 0, "MstCurrencyListGuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrmSellBuyId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "PrmSellBuyId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual TrnAltCoinTraderValue.AltCoinTraderSecurityDataTable GetRow(System.Guid MstCurrencyListGuid, global::System.Nullable<int> PrmSellBuyId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.Guid)(MstCurrencyListGuid));
            if ((PrmSellBuyId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(PrmSellBuyId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            TrnAltCoinTraderValue.AltCoinTraderSecurityDataTable dataTable = new TrnAltCoinTraderValue.AltCoinTraderSecurityDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private TrnAltCoinTraderValueTableAdapter _trnAltCoinTraderValueTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TrnAltCoinTraderValueTableAdapter TrnAltCoinTraderValueTableAdapter {
            get {
                return this._trnAltCoinTraderValueTableAdapter;
            }
            set {
                this._trnAltCoinTraderValueTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._trnAltCoinTraderValueTableAdapter != null) 
                            && (this._trnAltCoinTraderValueTableAdapter.Connection != null))) {
                    return this._trnAltCoinTraderValueTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._trnAltCoinTraderValueTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(TrnAltCoinTraderValue dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._trnAltCoinTraderValueTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet._TrnAltCoinTraderValue.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._trnAltCoinTraderValueTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(TrnAltCoinTraderValue dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._trnAltCoinTraderValueTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet._TrnAltCoinTraderValue.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._trnAltCoinTraderValueTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(TrnAltCoinTraderValue dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._trnAltCoinTraderValueTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet._TrnAltCoinTraderValue.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._trnAltCoinTraderValueTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(TrnAltCoinTraderValue dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._trnAltCoinTraderValueTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._trnAltCoinTraderValueTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._trnAltCoinTraderValueTableAdapter != null)) {
                    revertConnections.Add(this._trnAltCoinTraderValueTableAdapter, this._trnAltCoinTraderValueTableAdapter.Connection);
                    this._trnAltCoinTraderValueTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._trnAltCoinTraderValueTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._trnAltCoinTraderValueTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._trnAltCoinTraderValueTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._trnAltCoinTraderValueTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._trnAltCoinTraderValueTableAdapter != null)) {
                    this._trnAltCoinTraderValueTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._trnAltCoinTraderValueTableAdapter]));
                    this._trnAltCoinTraderValueTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591